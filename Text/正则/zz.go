package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/axgle/mahonia"
	"io/ioutil"
	"net/url"
	"regexp"
	"strconv"
	"strings"
	"time"
	"unicode"
	"encoding/binary"
	"runtime/debug"
	"crypto/cipher"
	"crypto/aes"
	"log"
)

func ConvertToString(src string, srcCode string, tagCode string) string {
	srcCoder := mahonia.NewDecoder(srcCode)
	srcResult := srcCoder.ConvertString(src)
	tagCoder := mahonia.NewDecoder(tagCode)
	_, cdata, _ := tagCoder.Translate([]byte(srcResult), true)
	result := string(cdata)
	return result
}

func taobao() {
	html := `
		UsernameOrMobile=abcdefg&HashedPassword=40bd001563085fc35165329ea1ff5c5ecbdbbeef&ImgValCode=
	`
	//exp := regexp.MustCompile(`(?s)^POST *.*Host *: *bbs\.cnnb\.com\.cn*.*username=(.*?)&`)
	//exp := regexp.MustCompile(`(?s)fastloginfield=username.*username=(.*?)&`)
	exp := regexp.MustCompile(`(?s)UsernameOrMobile=(.*?)&HashedPassword.*?&ImgValCode=.*`)

	r := exp.FindAllSubmatch([]byte(html), 1)
	username := string(r[0][1])
	u, err := url.QueryUnescape(username)
	//u  = ConvertToString(u, "gbk", "utf-8")
	fmt.Println(u, err)
	tb := []byte{0x88, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x7c,
		0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x49,
		0x01, 0x00, 0x00, 0x5b, 0x05, 0xf3, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x1d, 0x63, 0x6e, 0x74, 0x61,
		0x6f, 0x62, 0x61, 0x6f, 0xe8, 0xaf, 0xa5, 0xe4,
		0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe6, 0x9a, 0x82,
		0xe6, 0x97, 0xb6, 0xe6, 0x9c, 0xaa, 0xe7, 0x9f,
		0xa5, 0x50, 0xca, 0x39, 0x19, 0xd6, 0x95, 0x4b,
		0x8b, 0xe5, 0x24, 0xe9, 0xcd, 0xf6, 0x12, 0x85,
		0x33, 0x37, 0x43, 0xed, 0x0a, 0x78, 0x9b, 0x74,
		0x1d, 0x3e, 0xec, 0x25, 0x4a, 0xd6, 0x6c, 0x0a,
		0x26, 0x36, 0x38, 0x55, 0x16, 0xf5, 0x08, 0xdb,
		0x59}
	jb := []byte{0x88, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xa8, /*or a9*/
		0x00, 0x00, 0x00, 0x07 /*or 06*/, 0x00, 0x00, 0x00, 0x21,
		0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x1d}
	t := time.Now()
	if bytes.Equal(tb[:7], jb[:7]) {
		si := bytes.LastIndex(tb[7:], []byte("cntaobao"))
		if si == -1 {
			return
		}
		name := tb[si+8+7:]
		nn := dellm(name)
		fmt.Printf("%q=>%q\n", name, nn)
	}
	fmt.Println(time.Now().Sub(t))
	//fmt.Printf("%q", tb)
}

func tieba() {
	data := []byte{0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x03, 0x45, 0x8f, 0x3d, 0x0e, 0xc3, 0x20,
		0x0c, 0x85, 0xef, 0xe2, 0x99, 0x01, 0x0c, 0x04,
		0x9c, 0xb3, 0x44, 0xaa, 0x70, 0xe2, 0x54, 0x91,
		0xda, 0xa4, 0xa2, 0xd0, 0xa5, 0xea, 0xdd, 0x0b,
		0xcd, 0xd0, 0xd1, 0x4f, 0x9f, 0xdf, 0xcf, 0x1b,
		0xea, 0x53, 0x32, 0x8c, 0x6f, 0xd8, 0x16, 0x18,
		0xc1, 0x04, 0x72, 0x96, 0x08, 0x11, 0x14, 0xec,
		0xe9, 0x2e, 0x4d, 0x9a, 0x2a, 0xc9, 0x62, 0xa6,
		0xea, 0xa3, 0x77, 0x53, 0x75, 0xe2, 0x78, 0xaa,
		0xc1, 0x22, 0x37, 0xe2, 0x71, 0xe4, 0x92, 0xd3,
		0x56, 0x1a, 0x65, 0x51, 0x93, 0x10, 0x33, 0x19,
		0xf1, 0xc9, 0x50, 0xc7, 0x28, 0xb2, 0x84, 0x38,
		0x27, 0x66, 0xd4, 0x09, 0x3e, 0x0a, 0xd2, 0x5e,
		0xb6, 0x9e, 0x54, 0xf8, 0xd9, 0x3e, 0x56, 0x1f,
		0xdc, 0x8c, 0x61, 0x8d, 0x1c, 0xac, 0x37, 0x9a,
		0x8c, 0xb7, 0xe8, 0xc9, 0x58, 0x37, 0x74, 0xb6,
		0x95, 0x7a, 0x49, 0xbe, 0x94, 0xed, 0xd7, 0xc1,
		0x0e, 0x36, 0xb6, 0xbc, 0xf3, 0xfa, 0x83, 0x0a,
		0xe6, 0x53, 0xd2, 0x0a, 0x6e, 0xc7, 0xb5, 0x2f,
		0x40, 0x72, 0x83, 0x19, 0xb0, 0x79, 0x2b, 0x90,
		0x9c, 0x8f, 0x7c, 0x99, 0x8f, 0xa5, 0x5b, 0x68,
		0xf8, 0x7c, 0x01, 0xe1, 0x2e, 0xa7, 0xb3, 0xec,
		0x00, 0x00, 0x00}
	var b bytes.Buffer
	b.Write(data)
	reader, err := gzip.NewReader(&b)
	if err != nil {
		fmt.Println(err)
	}
	bs, err := ioutil.ReadAll(reader)
	if err != nil {
		fmt.Println(err)
	}
	fmt.Println(string(bs))
	html := `{"user":{"id":"179439922","name":"\u9ed1\u5854\u4e4b\u732b","portrait":"3209e9bb91e5a194e4b98be78cabb20a"},"anti":{"tbs":"38b5a6a59fe50a4e1532589378"},"server_time":"4128","time":1532589378,"ctime":0,"logid":978229034,"error_code":"0"}
`
	exp := regexp.MustCompile(`(?s)^{"user":{*.*"name":"(.*?)",*.*"anti":{"tbs":"*.*"logid":`)
	r := exp.FindAllSubmatch([]byte(html), 1)
	username := string(r[0][1])
	u := unicodetoutf8(username)
	fmt.Println(u)
	//u, err := url.QueryUnescape(username)
	////u  = ConvertToString(u, "gbk", "utf-8")
	//fmt.Println(u, err)
}

func decgzip(mdata []byte) (data []byte, err error) {
	var b bytes.Buffer
	b.Write(mdata)
	reader, err := gzip.NewReader(&b)
	if err != nil {
		return
	}
	//var buf bytes.Buffer
	//io.Copy(&buf,reader)
	data, err = ioutil.ReadAll(reader)
	if err != nil {
		return
	}
	//fmt.Println(string(data))
	return
}

var pacch chan *userpac

func init() {
	pacch = make(chan *userpac, 100)
}

type userpac struct {
	pac [][]byte
}

func tool() {
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x03, 0xb5, 0x96, 0x5b, 0x8f, 0xdb, 0xc6,
		0x15, 0xc7, 0xbf, 0x0b, 0x5f, 0xb9, 0x59, 0xde,
		0x2f, 0x5a, 0xa0, 0x0f, 0x12, 0x25, 0xf1, 0xa2,
		0x3b, 0x49, 0x89, 0x92, 0x8a, 0x3e, 0x0c, 0xc9,
		0xa1, 0x44, 0x89, 0x17, 0xf1, 0xa6, 0x9b, 0x91,
		0xc0, 0xbd, 0xc5, 0x36, 0xda, 0x4d, 0xec, 0xc2,
		0x28, 0xd0, 0xc0, 0x41, 0x61, 0xa0, 0x08, 0x0c,
		0xa4, 0x5d, 0xbb, 0x40, 0xd1, 0xda, 0xae, 0x9d,
		0x7c, 0x97, 0x60, 0xb5, 0xeb, 0x3c, 0xf5, 0x2b,
		0x74, 0xe8, 0xf5, 0x2d, 0x46, 0x50, 0xa3, 0x0f,
		0x11, 0xf4, 0x40, 0xce, 0xf9, 0x9f, 0x73, 0x66,
		0x86, 0x67, 0x7e, 0x73, 0xae, 0x61, 0x4e, 0x91,
		0xe5, 0x71, 0x08, 0x53, 0x03, 0xa6, 0x6b, 0xdf,
		0x81, 0xd8, 0x49, 0x54, 0x04, 0xc1, 0x11, 0xe6,
		0xf9, 0x69, 0x96, 0xd7, 0x8a, 0x9d, 0xec, 0x17,
		0x2e, 0x1a, 0xbc, 0x86, 0x2d, 0x8a, 0x70, 0x35,
		0x4c, 0x03, 0xec, 0x04, 0x9b, 0xe7, 0xf9, 0x2a,
		0x3b, 0x21, 0x88, 0x39, 0x77, 0x1c, 0x1e, 0x2f,
		0xdc, 0x63, 0x27, 0x0e, 0x09, 0x17, 0xae, 0x09,
		0x3a, 0x67, 0x43, 0x85, 0xef, 0x64, 0xe3, 0xc5,
		0x50, 0x52, 0x94, 0xf5, 0x84, 0x6b, 0x54, 0xab,
		0x3c, 0x93, 0x1b, 0xfc, 0xb8, 0x9d, 0x10, 0x7e,
		0xe4, 0xc2, 0xed, 0xf1, 0x3c, 0x0f, 0x03, 0xec,
		0x08, 0xcb, 0x77, 0x2b, 0x14, 0x13, 0xa3, 0xb0,
		0x8f, 0x8f, 0x30, 0x3f, 0x33, 0x8a, 0xd5, 0x2a,
		0x4e, 0x73, 0x29, 0x85, 0xae, 0x9f, 0x63, 0x27,
		0x1e, 0x08, 0x32, 0x78, 0x84, 0x65, 0x4e, 0x9c,
		0x22, 0x11, 0x79, 0x84, 0x45, 0x71, 0x27, 0x76,
		0x7d, 0x6f, 0x67, 0xc2, 0x2d, 0x32, 0x63, 0x97,
		0x77, 0x1f, 0x5c, 0xdc, 0xfc, 0xd7, 0xe1, 0xf6,
		0xe9, 0xf9, 0xe3, 0xd3, 0x8b, 0xbb, 0x0f, 0x2f,
		0x7e, 0xff, 0xcb, 0xf3, 0x6f, 0xcf, 0x2e, 0xee,
		0x3e, 0x39, 0xdc, 0xf9, 0xea, 0x13, 0x14, 0xbb,
		0xc8, 0x60, 0xda, 0x0f, 0x8a, 0xcc, 0xc8, 0x41,
		0x5e, 0x64, 0x6f, 0xc2, 0xad, 0xd0, 0x90, 0x1a,
		0x82, 0xd9, 0xdb, 0x25, 0xa0, 0x15, 0xf8, 0xe1,
		0x8c, 0x21, 0x8f, 0x19, 0x9e, 0xb4, 0x8b, 0x1d,
		0x7a, 0x7e, 0xb9, 0x92, 0x30, 0xb6, 0xfd, 0x00,
		0x3a, 0x61, 0x46, 0x2c, 0xbc, 0x8c, 0xc8, 0xa9,
		0x0a, 0xc3, 0xd2, 0x04, 0x4d, 0x52, 0x04, 0x4d,
		0x51, 0x7c, 0x85, 0xa6, 0x49, 0x81, 0x25, 0x28,
		0x46, 0x14, 0x19, 0xc2, 0xae, 0xb0, 0x02, 0x0b,
		0x3c, 0x86, 0xe0, 0x00, 0xa4, 0x45, 0x86, 0x16,
		0xba, 0x80, 0xac, 0xd8, 0x36, 0xed, 0x54, 0x8e,
		0x57, 0xd1, 0xec, 0xd5, 0x54, 0xd4, 0xc8, 0x8b,
		0x8d, 0x08, 0xcd, 0x03, 0xf3, 0x2a, 0xfb, 0xd1,
		0x24, 0x73, 0x71, 0xc5, 0x34, 0xa7, 0x76, 0xd2,
		0x5a, 0x56, 0x39, 0xbb, 0xdd, 0xe9, 0x6a, 0x91,
		0xd7, 0x9b, 0xe2, 0x92, 0x53, 0xc8, 0xab, 0x3a,
		0xce, 0x75, 0xab, 0x69, 0x3c, 0x67, 0x0a, 0x77,
		0xc6, 0xb7, 0x4c, 0x9f, 0xd8, 0xf2, 0xa2, 0xa4,
		0x5a, 0x3c, 0x6f, 0xb5, 0xda, 0x8a, 0xa3, 0xd9,
		0x7a, 0x46, 0xf4, 0x49, 0x69, 0x1f, 0x8a, 0xf5,
		0xb4, 0x66, 0xf5, 0x23, 0x22, 0xc9, 0x9d, 0x95,
		0x3b, 0x33, 0xdb, 0x01, 0xdc, 0x0d, 0x16, 0x5b,
		0x5d, 0x54, 0xf0, 0x8d, 0x64, 0xe1, 0x32, 0x83,
		0x77, 0x84, 0xf5, 0xdc, 0x98, 0x69, 0x51, 0x7f,
		0xd6, 0x9d, 0x10, 0x92, 0xe2, 0x15, 0xc3, 0xb1,
		0xa1, 0xad, 0xba, 0x5a, 0x7d, 0x17, 0x52, 0xc4,
		0xd4, 0xb4, 0x29, 0x18, 0xf2, 0xcb, 0xae, 0xbe,
		0x58, 0x2a, 0xd5, 0xf8, 0xad, 0x1d, 0x2c, 0x89,
		0x0e, 0x37, 0x0b, 0x64, 0x6d, 0x38, 0x09, 0x08,
		0x77, 0xba, 0x32, 0x4d, 0x79, 0x5f, 0x13, 0xe1,
		0x6e, 0x1d, 0x98, 0x64, 0x02, 0xf1, 0x38, 0xad,
		0xd8, 0xdc, 0xda, 0x6f, 0xd6, 0xf9, 0x7a, 0xea,
		0xb7, 0x99, 0x55, 0x3a, 0xe5, 0xfc, 0x65, 0xd1,
		0x2d, 0x02, 0x79, 0x40, 0x4e, 0x6d, 0xa5, 0xd9,
		0x33, 0xd6, 0xad, 0x66, 0x80, 0x2f, 0xc4, 0x71,
		0x75, 0xd6, 0x2b, 0xea, 0x8a, 0xdd, 0x08, 0x84,
		0x85, 0x22, 0x67, 0x61, 0xc1, 0x85, 0x39, 0x9d,
		0xc6, 0x8d, 0xa6, 0xcc, 0xd3, 0x7c, 0x45, 0x4a,
		0x5d, 0x40, 0x6d, 0x4c, 0xa8, 0xaa, 0xf5, 0x44,
		0x4f, 0xb7, 0xdb, 0xfd, 0xac, 0x91, 0xd4, 0xf5,
		0x6d, 0xda, 0xcc, 0xfa, 0x14, 0xd8, 0xaa, 0x21,
		0x93, 0xd4, 0x9b, 0x56, 0xbc, 0x8c, 0x46, 0x1a,
		0xbf, 0x57, 0x6a, 0x89, 0x65, 0x30, 0x70, 0xd8,
		0x36, 0xe7, 0x0e, 0xdb, 0x90, 0x61, 0xb4, 0x2d,
		0x46, 0xf1, 0x04, 0x67, 0x94, 0xc9, 0x9c, 0x67,
		0x7a, 0xf8, 0x34, 0x8e, 0x48, 0x23, 0x6f, 0xab,
		0x9a, 0xcc, 0x6c, 0xd6, 0x41, 0xbe, 0xb7, 0xec,
		0x5c, 0x0a, 0x9a, 0x63, 0x23, 0xd0, 0x86, 0x94,
		0x60, 0xe8, 0xd4, 0x58, 0x9a, 0xe0, 0x82, 0x54,
		0x33, 0x2c, 0xbb, 0x48, 0xdc, 0x14, 0x18, 0x61,
		0x67, 0x3d, 0xa8, 0xdb, 0x71, 0x67, 0xb4, 0x75,
		0x46, 0x15, 0x33, 0x93, 0xfb, 0x79, 0x67, 0xa7,
		0xc0, 0x1d, 0xc8, 0x5b, 0x3b, 0xa5, 0xdb, 0x97,
		0x4d, 0x4f, 0x91, 0xe6, 0x31, 0xb9, 0x4d, 0x45,
		0xdc, 0xb2, 0x3b, 0x2d, 0xd0, 0x17, 0x9c, 0xcc,
		0x1d, 0x81, 0xfa, 0xb8, 0x31, 0xae, 0x11, 0xd0,
		0x69, 0x56, 0x2d, 0xae, 0x2b, 0x54, 0x0c, 0x01,
		0xf7, 0x3d, 0x6a, 0xba, 0x6d, 0x49, 0x2c, 0xaf,
		0x89, 0x85, 0xd1, 0x9b, 0x6d, 0x43, 0x85, 0xb3,
		0x37, 0x9c, 0x10, 0x2d, 0x23, 0x33, 0x87, 0xbe,
		0xd3, 0xab, 0x6e, 0xbb, 0xbe, 0x46, 0xb5, 0x49,
		0x59, 0xc6, 0x03, 0xc5, 0x6e, 0x69, 0xb5, 0xa4,
		0xcf, 0x68, 0x66, 0xdc, 0xea, 0x8f, 0xb2, 0xe5,
		0xd0, 0xc9, 0xfc, 0x64, 0xaf, 0xb9, 0xad, 0x05,
		0xbd, 0xca, 0x44, 0x77, 0x3e, 0x0e, 0x79, 0xc7,
		0x5c, 0x0b, 0x83, 0xaa, 0xb8, 0x5a, 0x03, 0xbf,
		0x01, 0x8d, 0x3e, 0x51, 0xc3, 0x8b, 0x4a, 0xa2,
		0xea, 0x9c, 0x4a, 0x88, 0x0a, 0x2f, 0xd0, 0xf1,
		0x5c, 0x59, 0x2e, 0x88, 0x8d, 0x97, 0xfe, 0x34,
		0xf6, 0x5c, 0xb6, 0xf8, 0x65, 0x43, 0x50, 0x17,
		0x72, 0x3c, 0x9e, 0xc2, 0xa1, 0x3e, 0x90, 0x7c,
		0x75, 0xa0, 0x91, 0xa9, 0x4a, 0x0a, 0x89, 0xa5,
		0x27, 0xa2, 0x2b, 0x4f, 0xc3, 0x99, 0xd5, 0x50,
		0x85, 0x15, 0xaf, 0xad, 0x3a, 0x93, 0xde, 0x48,
		0xe5, 0xd8, 0xd0, 0xdf, 0x0f, 0x2a, 0x89, 0x6e,
		0x4c, 0xf6, 0xab, 0x39, 0xd5, 0x77, 0xf4, 0x89,
		0xab, 0xd5, 0xcd, 0xe5, 0x62, 0x02, 0x26, 0xbd,
		0x5a, 0xd3, 0x6e, 0x85, 0xd9, 0x50, 0x6d, 0xa8,
		0x4e, 0x33, 0xb0, 0x09, 0xc6, 0xef, 0x44, 0xf1,
		0x74, 0x19, 0x59, 0x05, 0xb1, 0x4a, 0x12, 0xd5,
		0x01, 0xce, 0x38, 0x9d, 0x0e, 0xe4, 0xa1, 0xd0,
		0xe9, 0x79, 0x5e, 0x67, 0xbd, 0x91, 0xfc, 0x01,
		0x30, 0x15, 0x46, 0x02, 0xc1, 0x36, 0x9b, 0x88,
		0x16, 0xbb, 0xdf, 0x87, 0x99, 0x6e, 0x0b, 0x73,
		0x32, 0xcd, 0x7b, 0xba, 0x98, 0xa9, 0xdb, 0x2a,
		0xc3, 0xed, 0xe7, 0x8e, 0x3e, 0xf6, 0x58, 0x5f,
		0x69, 0x6a, 0x3d, 0x40, 0x8b, 0x63, 0xa3, 0x5d,
		0xfd, 0xd9, 0x3b, 0xe7, 0x5c, 0x75, 0xe2, 0xe8,
		0xed, 0x89, 0x0e, 0xff, 0xf7, 0x69, 0x66, 0x68,
		0x92, 0x26, 0x18, 0x8a, 0x23, 0x68, 0x96, 0x17,
		0x04, 0x9a, 0x63, 0x68, 0x96, 0xa0, 0x19, 0x9e,
		0x25, 0x38, 0xcf, 0x66, 0x18, 0x40, 0xa2, 0x07,
		0x01, 0x52, 0x1e, 0xef, 0x31, 0x5d, 0x81, 0x61,
		0x45, 0x9e, 0x24, 0xf9, 0x57, 0x67, 0x79, 0xeb,
		0x83, 0xb8, 0x06, 0xfc, 0x0e, 0xcc, 0x32, 0x30,
		0x2b, 0xe1, 0x75, 0x78, 0xf4, 0xf9, 0xe5, 0x9f,
		0x9e, 0x9f, 0x7f, 0x7b, 0x1f, 0xf1, 0x88, 0x47,
		0x10, 0x41, 0x1a, 0x1b, 0x44, 0x11, 0x4c, 0xcd,
		0xd7, 0x70, 0x2b, 0x19, 0x36, 0x8f, 0xe3, 0xa0,
		0x0e, 0x72, 0x50, 0x62, 0xa0, 0xa4, 0x68, 0xf8,
		0xc6, 0xbf, 0x34, 0xbf, 0x8b, 0x28, 0x84, 0x42,
		0x18, 0xae, 0x82, 0x78, 0x07, 0xa1, 0x01, 0xf3,
		0xdc, 0x47, 0x59, 0x91, 0xde, 0xcf, 0x1a, 0xaf,
		0x06, 0x4b, 0x82, 0x94, 0xba, 0x92, 0x99, 0x30,
		0x72, 0xb0, 0x13, 0xea, 0x08, 0x73, 0x40, 0xea,
		0x66, 0x3a, 0xcc, 0x60, 0xde, 0x4b, 0xdd, 0x2b,
		0xd6, 0x60, 0x27, 0x3f, 0xbf, 0x86, 0x65, 0x08,
		0xa7, 0x48, 0x40, 0x22, 0x89, 0x57, 0x44, 0x4e,
		0xee, 0xc7, 0x91, 0xea, 0xa2, 0x00, 0x1b, 0x18,
		0xb9, 0xc0, 0x8d, 0xa3, 0x59, 0x0e, 0x7c, 0x94,
		0x3f, 0x04, 0xbe, 0xeb, 0x83, 0x2b, 0x53, 0x67,
		0xa7, 0xd5, 0x51, 0xe8, 0xb7, 0xbe, 0xf4, 0x7b,
		0xbe, 0x0b, 0x3f, 0x4a, 0x91, 0xa7, 0x57, 0x6c,
		0x8a, 0x0f, 0xb9, 0x32, 0xef, 0xa7, 0x8d, 0x5d,
		0x68, 0x83, 0x18, 0xfd, 0x3f, 0xe4, 0xc9, 0xbe,
		0xe7, 0x99, 0x42, 0xf4, 0x11, 0x43, 0x34, 0x6b,
		0x2f, 0x88, 0xe3, 0xf4, 0x47, 0xbd, 0x7f, 0x71,
		0xc5, 0xf6, 0x77, 0xf6, 0xac, 0x7c, 0x95, 0xe2,
		0x00, 0xe9, 0xd1, 0x96, 0xbd, 0xfc, 0x61, 0x57,
		0x1a, 0x1d, 0xbc, 0xf4, 0x0d, 0x67, 0xff, 0xdf,
		0x0d, 0xc0, 0x0b, 0x3c, 0x47, 0x50, 0x95, 0x0a,
		0x81, 0x9e, 0x58, 0x96, 0xa7, 0x58, 0x12, 0xd5,
		0x0f, 0xcd, 0x70, 0x04, 0xe7, 0x30, 0x0c, 0xcb,
		0xb2, 0xe5, 0x05, 0xe0, 0xb2, 0xbc, 0xeb, 0x39,
		0x5d, 0xcf, 0xa6, 0x39, 0x87, 0x66, 0xa9, 0x57,
		0x45, 0x53, 0x26, 0xad, 0x2d, 0x7f, 0x90, 0xf0,
		0x03, 0x05, 0xca, 0x93, 0x14, 0x83, 0x0a, 0x94,
		0x41, 0xf9, 0x58, 0x9e, 0xe1, 0x44, 0x92, 0x27,
		0x44, 0x8a, 0xa5, 0x28, 0xa2, 0x22, 0xf0, 0xac,
		0xcb, 0x32, 0x1e, 0xc1, 0x55, 0x10, 0x45, 0x45,
		0xca, 0xeb, 0x0a, 0x90, 0x87, 0x2e, 0xf4, 0xae,
		0x0a, 0x14, 0x15, 0x45, 0xe4, 0x3b, 0xcb, 0x08,
		0x84, 0x2f, 0x6b, 0xf3, 0x0f, 0x8f, 0xbf, 0xff,
		0xfb, 0xb3, 0x8b, 0x7f, 0xdf, 0xb9, 0x7c, 0xf0,
		0x1c, 0x4d, 0x23, 0x41, 0xab, 0x46, 0x9b, 0x5f,
		0x87, 0xb3, 0x14, 0xb8, 0xf0, 0xbd, 0x8b, 0x31,
		0x00, 0x36, 0x0c, 0xca, 0xfb, 0xa9, 0x96, 0x01,
		0x8d, 0x10, 0x9d, 0x0a, 0xb5, 0x33, 0xe7, 0x3d,
		0x95, 0x96, 0xe8, 0xfe, 0xa6, 0x4d, 0x2c, 0x9a,
		0xba, 0x4f, 0x1a, 0x2a, 0x8d, 0xb0, 0xaf, 0xea,
		0xb2, 0x66, 0xa5, 0xd5, 0x09, 0xa9, 0xcc, 0xea,
		0xa6, 0x53, 0x28, 0x0c, 0xb9, 0xf2, 0xa0, 0xe0,
		0xb8, 0x7e, 0x28, 0x58, 0x9b, 0x22, 0xc4, 0xf3,
		0x1e, 0x1c, 0xd6, 0x26, 0x02, 0x39, 0xa2, 0x5d,
		0x9a, 0x1d, 0x6f, 0x49, 0x3f, 0xd3, 0xd4, 0xf6,
		0x74, 0x31, 0x67, 0x40, 0x6d, 0x27, 0x4e, 0x7b,
		0x86, 0x18, 0xbb, 0x4a, 0x42, 0x5a, 0x8d, 0x95,
		0x6c, 0x3a, 0x7a, 0x2a, 0x14, 0x26, 0x33, 0x55,
		0xc6, 0x70, 0x22, 0xb9, 0xfc, 0xb0, 0x9b, 0x2c,
		0x26, 0x82, 0xd2, 0x9b, 0x2a, 0x7c, 0x2f, 0x14,
		0xf6, 0x9a, 0x54, 0x34, 0xcc, 0x59, 0x3a, 0xd6,
		0xcc, 0x45, 0x55, 0xcc, 0xea, 0x26, 0x25, 0x58,
		0xfe, 0x46, 0x66, 0x9a, 0x2d, 0xa2, 0xba, 0x34,
		0xc1, 0xba, 0x08, 0xd7, 0xa1, 0x4c, 0xe2, 0x9d,
		0xad, 0xa0, 0xf3, 0x38, 0x6b, 0x75, 0x9b, 0xb1,
		0xb6, 0x15, 0x01, 0x3e, 0xf1, 0x6c, 0x04, 0xd4,
		0xfd, 0x94, 0x09, 0x39, 0x6f, 0xa0, 0xb3, 0x20,
		0x5c, 0x52, 0xa4, 0x67, 0x4b, 0xc9, 0xdc, 0x07,
		0x5b, 0xcb, 0xd4, 0x84, 0x41, 0x7d, 0x21, 0xe6,
		0x55, 0x90, 0xe9, 0x4d, 0xb2, 0xff, 0x36, 0x3f,
		0x9a, 0x9b, 0x12, 0x2f, 0x72, 0x75, 0x5c, 0x0c,
		0x40, 0xc6, 0x8a, 0xb5, 0x1e, 0x81, 0x2f, 0x08,
		0x95, 0xe4, 0x17, 0xf2, 0xaa, 0x8f, 0x9b, 0x63,
		0xa3, 0x6e, 0x35, 0x71, 0xc3, 0xb1, 0x1a, 0x21,
		0x25, 0xe2, 0x6e, 0xee, 0xc0, 0xc2, 0x68, 0x4d,
		0x82, 0xe1, 0xd2, 0xa1, 0xd3, 0xf6, 0xde, 0xea,
		0x06, 0x8e, 0x21, 0xf6, 0xaa, 0x53, 0x73, 0x5f,
		0x77, 0xd4, 0x6e, 0xb2, 0xd4, 0x8a, 0x91, 0xde,
		0x93, 0xd3, 0x91, 0x58, 0xf2, 0xc9, 0x89, 0xcb,
		0xbe, 0x09, 0x23, 0x5f, 0x95, 0xc1, 0xeb, 0xe6,
		0xe5, 0xeb, 0xdf, 0x9d, 0x3f, 0xfd, 0xba, 0xdf,
		0x1e, 0x1a, 0x97, 0xb7, 0x9e, 0x5c, 0x7c, 0xf9,
		0x6b, 0x64, 0xf5, 0xa3, 0xbc, 0x6c, 0xbd, 0xe0,
		0xe6, 0xcd, 0x27, 0x99, 0xa1, 0x73, 0xb6, 0xf3,
		0xdf, 0xc5, 0x06, 0xaa, 0x96, 0xab, 0xc6, 0xe5,
		0x47, 0xa8, 0xe1, 0x04, 0x71, 0x06, 0x75, 0x18,
		0x96, 0x1d, 0x56, 0x5a, 0x8a, 0x4b, 0x2a, 0x18,
		0x85, 0x6d, 0xfa, 0x79, 0x50, 0xce, 0xe0, 0xe2,
		0x57, 0x0f, 0x0e, 0x9f, 0x3f, 0x3c, 0xdc, 0x3a,
		0x3d, 0x7c, 0x73, 0xfd, 0xbb, 0xeb, 0xf7, 0x2e,
		0x6e, 0xde, 0xb9, 0xfc, 0xe2, 0x37, 0xe7, 0x4f,
		0xff, 0x7a, 0xfe, 0xf8, 0xde, 0x47, 0x2f, 0xfe,
		0xf1, 0x15, 0xea, 0xa5, 0x5e, 0x9c, 0x7d, 0x73,
		0xf9, 0xfc, 0xec, 0xa3, 0x2b, 0xcb, 0xe1, 0xec,
		0x8b, 0xc3, 0xcd, 0x7f, 0x7e, 0x77, 0xfd, 0xcb,
		0xef, 0x6f, 0x9c, 0x5e, 0xfc, 0xf1, 0xd1, 0xe1,
		0xd9, 0xf5, 0xc3, 0xed, 0x87, 0x17, 0x7f, 0xfb,
		0xcb, 0xe1, 0xf4, 0xfe, 0xe5, 0xad, 0x1b, 0x65,
		0x87, 0x95, 0x23, 0x4e, 0x49, 0x28, 0xc7, 0x9b,
		0x04, 0xf7, 0x6e, 0x95, 0xc2, 0x4f, 0x7f, 0x7b,
		0x38, 0x7b, 0x72, 0xf8, 0x14, 0xb5, 0x65, 0x4f,
		0x51, 0xca, 0x8b, 0xcf, 0x1e, 0xbc, 0x38, 0xbd,
		0x8d, 0x5d, 0x31, 0xea, 0xb5, 0xf2, 0xf2, 0xfe,
		0x19, 0x0a, 0x8f, 0xfa, 0x36, 0x24, 0x3b, 0xdc,
		0x78, 0x7a, 0xf9, 0xd9, 0xa3, 0xff, 0x3c, 0xfb,
		0x73, 0x59, 0xbb, 0x08, 0x2e, 0xb3, 0x31, 0xaa,
		0xd2, 0xd9, 0x74, 0xee, 0x37, 0x03, 0x90, 0xcd,
		0x8d, 0x8d, 0x9f, 0x3b, 0xf3, 0x1f, 0x74, 0x6f,
		0xb5, 0x97, 0x74, 0x35, 0xe6, 0x31, 0xda, 0xa8,
		0x3c, 0x2d, 0xe0, 0xc7, 0xff, 0x05, 0x99, 0xaa,
		0x87, 0xb7, 0xbc, 0x0a, 0x00, 0x00}
	ndata, err := decgzip(data)
	fmt.Println(err, string(ndata))
}

func jingdong() {
	str := `{"customerService":null,"firstBuyGiude":{"jumpUrl":"https://h5.m.jd.com/dev/2t4mH6MsXjUCHHvY5EAA63tS6XLq/index.html","type":"1"},"isSupportCredit":false,"score":0,"noModifyText":"用户名不支持修改呦~","userPlusStatus":false,"plusImagUrl":"http://img30.360buyimg.com/mobilecms/jfs/t19342/201/2116922074/13883/b9474af3/5ae28327Na09bb2c9.png","userInfoSns":"f9zVYsd+HTTZbqKkA5bLMNJnfOZ+CcuGpD+5NAroh3udg6KTi/x68CIW66WKLHcJbRs/P0Czm8DrBWPn/qtcpdgTLleyQjxR8H+wCW+G3+M7vhSgJnPgNY/CHfuUXSJpNJDym1/ZTb1em6kNRjkHAo/CHfuUXSJpak/M5glGJUYl/dZpTTGzB8eyvlT0qe+or9b5viFD6DriL3prZ5ikuNulGQ0ZbHFOSvKFl+j8XAgOuDHbEl7jHGsmu5mt2roEFG6269Crda1wTeIIDqRrxxzgEqDRxrFsP1axIm3qDFWoknVJ6zHBqWS3eULThc4EGenxuVoY+3HYh63O+Zon0StLIJG3wvltzWbtClFXSlJU17SR1XCY+7CBSWbuqdraSmMvQDboMVxcV9TsGPtMyHeyatKyHNPGTfHCho0xr8+WbMKaP7csdVaDXEXB/ecFAW5N79S7+if1ZxKC46J8uSOgxmH5bw57nknTteicOAxNiJ1L0GG+lHbKJBqP3JToKPVskUcsiqzJdKj2ps8dhXm6cTv7QA8pvaiEeSP/B+u9qIR5I/8H672ohHkj/wfrvaiEeSP/B+u9qIR5I/8H672ohHkj/wfrvaiEeSP/B+u9qIR5I/8H672ohHkj/wfrvaiEeSP/B+u9qIR5I/8H67tGW6kE7IjGoXZeURQCiIQJ0rI07qWRq8dGZmgWEI7p6JpMYOVI54mizQ9qRSYzph1PcRYdJDTkjYaYOBFbKmsUIEIcFlb/3iMnoZknWu/pqqIcacXrZQGU7MOffMvwCiQaTH3CalxsY8W4zzmsRb7h0rtOR8sIxA35zhcRXf4iHFJOa28XSLA=","userPlusIcon":"http://m.360buyimg.com/mobilecms/jfs/t3202/315/2467725324/2364/5fb33a04/57e1f6f3N73486006.png","xiaoBaiMessage":"小白信用60.3","bannerType":"1","schoolDataInfo":{"message":"","status":false},"employeeSetting":{"isEmployee":"false"},"enc":1,"cardsResetOrderInfo":[{"sort":101,"functionId":"wendadongtai","maidianId":"MyJD"},{"sort":102,"functionId":"jinrongfuwu","maidianId":"MyJD"},{"sort":103,"functionId":"wodebaobao","maidianId":"MyJD"},{"sort":104,"functionId":"recommendfloor","maidianId":"MyJD"}],"plusSetting":{"plusColor":"ffffff","plusRadianImg":"http://img30.360buyimg.com/mobilecms/jfs/t16765/199/1674461405/2235/5c334443/5ad46dfcNfb25c241.png","plusBkImg":"http://m.360buyimg.com/mobilecms/jfs/t6013/313/194635806/81411/9764d43f/5926981fN7e6edef6.png"},"nickname":"咸鱼滑稽","qianbaoDegradeStatus":false,"labels":"BsaJ/8c91yThOI2C2PwL/jFRi0SI2FD6IRGJWrAY0HgDTcuH30pfe7cdim7Wwum+tOeUBY70V2d24Xx0isJILZjh3aBy8ZOS8odHq0WEpGTcRr7uT3ZHXeYCd6UNqjY7HOZH6Om7zJCuETgrXJTjA8sDT17WiwG3FK/AkTavumvmG0+Mx7R6+4WNFoJx8a+Yfbs8dzZ3m5fQR4amk10fbCqhiaxWTJ7QDj8tAasRF0PcRr7uT3ZHXaByHojtIXuQas48BO/+j/I06jGpP+TXSDWF+ScWEm18+dtceuSKYlUkc2rLzWNlcS8OAZTzDcINqkJuVROGrV8=","code":"0","plusText":"立享PLUS特权","interview":false,"gongyiDataInfo":{"imgUrl":"","status":false},"closeReminder":{"cardSubTitle":"您可前往“我的京东-账户设置-我的定制”重新开启此卡片~","tempCardTitle":"有新内容再为您推荐","cardTitle":"确定不再出现？"},"jingXiangZhiFlashSwitch":false,"plusBannerShow":true}`
	exp := regexp.MustCompile(`"nickname":"(.*?)"`)
	r := exp.FindAllSubmatch([]byte(str), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func weipinhui() {
	str := `GET /vips-mobile-tracker/router.do?repeat=0&activity_propety=null&page_id=null&mid=4ba8c75d-c3c2-3eb9-bcce-cb82dec5f13e&activity_starttime=1533095136937&activity=active_te_log_send_suc&service=mobile.activityinfo.logger&fdc_area_id=104104101&app_name=shop_android&activity_endtime=1533095136937&userid=15888397012&user_class=B&warehouse=VIP_NH&app_version=6.23.8&vipruid=311404558&location=104104&status=&status_descrit=null&session_id=4ba8c75d-c3c2-3eb9-bcce-cb82dec5f13e_shop_android_1533095136425&deeplink_cps=&user_label=3105%2C310505&skey=2d30297ff20ec9b7442dc4f3c335abdc&channel=1&user_group=6233_%E3%80%90%E6%96%B0%E3%80%91Android%EF%BC%9A%E6%97%A5%E5%B8%B8%E5%9C%A8%E7%94%A8&other_cps= HTTP/1.1
Authorization: OAuth api_sign=9a52011e20dd4de8ca1ea2fe662e7c9336c48562
Host: sc.appvipshop.com
Connection: Keep-Alive
Accept-Encoding: gzip
User-Agent: okhttp/3.6.0`
	exp := regexp.MustCompile(`(?s)^GET /vips-mobile-tracker/router.do\?*.*vipruid=(.*?)&`)
	r := exp.FindAllSubmatch([]byte(str), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func qqgame() {
	str := `GET /gchatpic_new/BE8A7744BF286B94B9498305C4878712FA0DA31596D7972BBC392BA7BBF8DFA846B88D1CE21880B41F4BDE733476D5CC2B2DB9FEF5E4FECCC3BE63C57AF74FECB2CBBF32D201AE34ADA9D26F66457546FB5871501B40B570/0?vuin=237731947&term=1&srvver=26783&rf=naio HTTP/1.1
Host: 125.78.252.149
Accept: */*
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
Connection: Keep-Alive
Cache-Control: no-cache
Accept-Encoding: gzip, deflate
referer: http://im.qq.com
Cookie: ST=00015B61021C00403A0F3ED50CE639875CCD58B35126C2D03145ABCA9478AF278565D2AD921F9375A0F4D8C1344EBF2C6009A08DE2AC7E134E6A06753A1BCCC609EA2675063A62CB
`
	exp := regexp.MustCompile(`(?s)^GET /gchatpic_new/*.*\?*.*vuin=(.*?)&`)
	r := exp.FindAllSubmatch([]byte(str), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func yilong() {
	html := `GET /b/ss/elongcom/1/H.24.3/s43506497119936?AQB=1&ndh=1&t=1%2F7%2F2018%2015%3A42%3A18%203%20-480&ce=UTF-8&ns=elong&pageName=hotel.elong.com%2F00101031&g=http%3A%2F%2Fhotel.elong.com%2F00101031%2F&r=http%3A%2F%2Fhotel.elong.com%2F00101031%2F&cc=CNY&ch=hotels&events=event8%2Cevent1&c1=hotel.elong.com&v1=hotel.elong.com&c2=http%3A%2F%2Fhotel.elong.com%2F00101031&v3=15888397012&c4=actual%20hotel%20shopper&c5=hotel%20detail%20page%2020120906&c6=50793&c7=20150416&c8=chrome%2F64.0.3282.140&c9=0101&c10=00101031&c11=visit%20hotel%20detail%20page%2020120906&v15=50793&v16=http%3A%2F%2Fhotel.elong.com%2F00101031&c18=12&v18=chrome%2F64.0.3282.140&v22=00101031&v23=c8e27e90-4bfa-4bcf-b7f0-6f91b31ec3c7&v25=2018-08-01%2015%3A42%3A17&v26=0101&v50=50793&s=1920x1080&c=24&j=1.6&v=N&k=Y&bw=1158&bh=987&p=Chrome%20PDF%20Plugin%3BChrome%20PDF%20Viewer%3BNative%20Client%3BShockwave%20Flash%3BWidevine%20Content%20Decryption%20Module%3B&AQE=1 HTTP/1.1
Host: elong.d2.sc.omtrdc.net
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
DNT: 1
Referer: http://hotel.elong.com/00101031/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cookie: s_vi_eptgfzx7Bxxx7Cvgzfzsaegpff=[CS]v4|2D468437052A6CE0-4000012A80099622|5A8D086D[CE]; s_vi=[CS]v1|2DB0B0240530BF69-60000308200313DD[CE]`
	str := `{"Birthday":"1970-01-01","CardNo":240000000513918113,"Email":"","ErrorCode":"","ErrorMessage":"","ImageUrl":"","IsError":false,"Level":0,"Name":"","NickName":"yilong123456","PhoneNo":"15888397012","Proxy":"AP0011893","RegisterDate":"2018-08-01 15:01","Sex":"M","UserId":0,"residentCity":""}`
	exp := regexp.MustCompile(`"Birthday"*.*"CardNo"*.*"Email"*.*"ErrorCode"*.*"ErrorMessage"*.*PhoneNo":"(.*?)"`)
	exphtml := regexp.MustCompile(`(?s)^GET *.*elongcom*.*c1=hotel.elong.com*.*v1=hotel.elong.com*.*v3=(.*?)&`)
	r := exp.FindAllSubmatch([]byte(str), 1)
	rh := exphtml.FindAllSubmatch([]byte(html), 1)
	username := string(r[0][1])
	fmt.Println(username)
	fmt.Println(string(rh[0][1]))
}

func yihaodian() {
	cookie := `Cookie: provinceId=2; cityId=2817; yhd_location=2_2817_51973_0; __jdv=259140492|baidu|-|organic|%25E4%25B8%2580%25E5%258F%25B7%25E5%25BA%2597|1533111339141; cart_num=0; cart_cookie_uuid=b0c0ad45-d9bf-467f-9e63-45fa0e131732; msessionid=NWAESBH95MRK4PK42GYDGGPD6ZRJW3GA6JS4; rURL=http%3A%2F%2Fwww.yhd.com%2F; cid=NXRNMjU0NnlRMTMyN3JGNjk2OGdMOTM0MWxEMjcyMnBBOTkyM3hCODc2NHVUNDk0; unionKey=105427390; uid=9D6B7AB71963C6ACFD1462C1745CAE82; ut=CK8MPMR6Z7XZ2UAYAK5AHTTYE1BCRNEN1T1AJBMEL; pin=*yhd_XckXcRB; seus=4L1BDX15DHE1X3SSR35UGSW; uname=yiqiladabian; yihaodian_uid=277198053; ucocode=tencent; __jda=259140492.1533111339138476709562.1533111339.1533111339.1533111339.1; __jdc=259140492; JSESSIONID=4EEBB84D33C00C3F67BF507363F5F453.s1; __jdb=259140492.9.1533111339138476709562|1.1533111339`
	exp := regexp.MustCompile(`Cookie*.*www.yhd.com*.*uname=(.*?);`)
	r := exp.FindAllSubmatch([]byte(cookie), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func huazhu() {
	html := `<a class="myaccount login" href="http://my.huazhu.com//PersonalInfo" id="loginedUserName">
                                                    <span class="username Lposr">
                                                        Hi 汤晨良
                                                                <i class="small_redCircle"></i>

                                                    </span>
                                                    <span class="userleveldesc userlevel-P ">e会员</span>
                                                    <i class="drop_arrow"></i>
                                                </a>`
	exp := regexp.MustCompile(`(?s)huazhu.*class="username Lposr">[\t\r\n ]*Hi *(.*?)[\t\r\n ]*<`)
	r := exp.FindAllSubmatch([]byte(html), 1)
	username := string(r[0][1])
	//username=strings.Replace(username," ","",-1)
	//username=strings.Replace(username,"\r","",-1)
	//username=strings.Replace(username,"\n","",-1)
	//username=strings.Replace(username,"\t","",-1)
	//username=strings.TrimPrefix(username,"Hi")
	fmt.Println(username)
	header := `GET /?CityID=3101&CheckInDate=2018-08-02&CheckOutDate=2018-08-03 HTTP/1.1
Host: hotels.huazhu.com
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
DNT: 1
Referer: http://www.huazhu.com/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cookie: _HZ_SessionId=jmqgoiUPovQF9qyTdcX3qhODt7rkSWzkpP+4WMfUYNo=; __utma=107792157.658033675.1533171281.1533171281.1533171281.1; __utmc=107792157; __utmz=107792157.1533171281.1.1.utmcsr=baidu|utmccn=(organic)|utmcmd=organic|utmctr=%E5%8D%8E%E4%BD%8F; gr_user_id=64473d2d-08d7-4a22-91da-9d12d2fdd2ce; gr_session_id_8f6e3e7f89d647cab9784afa81ea87bd=ef287772-af3e-47dd-8c48-bcf564467090; gr_session_id_8f6e3e7f89d647cab9784afa81ea87bd_ef287772-af3e-47dd-8c48-bcf564467090=true; Hm_lvt_e5770a47472445b3f839a58a32b8abe5=1533171281,1533171341; p_t=PnmUJnpSkj+g4ztbtJ4BHx1qHt1jKCNjftuAoBeK2KAT6SHXEIweCQ==; unick=%e6%b1%a4%e6%99%a8%e8%89%af; MemberLevelID=P; Hm_lpvt_e5770a47472445b3f839a58a32b8abe5=1533171431; __utmb=107792157.10.9.1533171431020`
	exp = regexp.MustCompile(`unick=(.*?);.*MemberLevelID=.*;`)
	r = exp.FindAllSubmatch([]byte(header), 1)
	username = string(r[0][1])
	username, _ = url.QueryUnescape(username)
	fmt.Println(username)
}

func rujia() {
	html := `<a href="/Member/" class="login_txt">汤晨良</a>`
	exp := regexp.MustCompile(`<a *href *= *.*Member.*class *= *"login_txt" *>(.*?)<`)
	r := exp.FindAllSubmatch([]byte(html), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func zhenai() {
	cookie := `login_health=17d639ca0dd51fbc6b40885e9751b29f129031ea9e6c4acded949aa2f21db8fb523b4584932ad947771175e6082a9de1a5d438c09fa486b629a2258a664ac951; token=1782709027.1533179156477.3e472624a595704e12720759b7ea5642; p=%5E%7Eworkcity%3D10131118%5E%7Esex%3D0%5E%7Emt%3D1%5E%7Enickname%3D%E4%BC%9A%E5%91%981782709027%5E%7Edby%3De63ecf696318e86f%5E%7Elh%3D1782709027%5E%7Eage%3D21%5E%7E; isSignOut=%5E%7ElastLoginActionTime%3D1533179156477%5E%7E; mid=%5E%7Emid%3D1782709027%5E%7E; loginactiontime=%5E%7Eloginactiontime%3D1533179156477%5E%7E; logininfo=%5E%7Elogininfo%3D1782709027%5E%7E; live800=%5E%7EinfoValue%3DuserId%253D1782709027%2526name%253D1782709027%2526memo%253D%5E%7E; preLG_1782709027=2018-08-02+11%3A04%3A06; dgpw=1; sid=niWzpQNzWrAJ9ka5C231; guideFlag1782709027=1; isFirstLoadPage=1; JSESSIONID=abcgQQk3XCLZE_VGvM4tw; Hm_lvt_2c8ad67df9e787ad29dbd54ee608f5d2=1533179159; Hm_lpvt_2c8ad67df9e787ad29dbd54ee608f5d2=1533179159; nqua_index_1782709027=1; clientp=50830`
	if strings.Contains(cookie, "login_health") && strings.Contains(cookie, "token") {
		var c string
		var err error
		for c, err = url.QueryUnescape(cookie); strings.Contains(c, "%") && err == nil; {
			c, err = url.QueryUnescape(c)
		}
		fmt.Println(c)
		//exp:=regexp.MustCompile(`token=(.*?)\..*;`)
		//exp:=regexp.MustCompile(`\^~lh=(.*?)\^`)
		//exp:=regexp.MustCompile(`\^~mid=(.*?)\^`)
		//exp:=regexp.MustCompile(`\^~logininfo=(.*?)\^`)
		exp := regexp.MustCompile(`userId=(.*?)&`)
		//exp:=regexp.MustCompile(`preLG_(.*?)=`)
		//exp:=regexp.MustCompile(`guideFlag(.*?)=`)
		//exp:=regexp.MustCompile(`nqua_index_(.*?)=`)
		r := exp.FindAllSubmatch([]byte(c), 1)
		username := string(r[0][1])
		fmt.Println(username)
	}

	req:=`POST /files/v2/1251661065/zhenai4log/data/appLogs/2018-08-03/17/1782709027/log_20180803160128.txt HTTP/1.1
Authorization: Yuqf58krXtiZPqN2wAfzzJ0qMIxhPTEyNTE2NjEwNjUmaz1BS0lEMW0xTTYyNnlJRzROWENMV0N1Y2Z3RkpWWVdVbnJnR1EmZT0xNTMzMjg0MjE2JnQ9MTUzMzI4MzYxNiZyPTE4MTk2ODkyODAmZj0vMTI1MTY2MTA2NS96aGVuYWk0bG9nL2RhdGEvYXBwTG9ncy8yMDE4LTA4LTAzLzE3LzE3ODI3MDkwMjcvJmI9emhlbmFpNGxvZw==
Connection: Keep-Alive
Accept: */*
User-Agent: cos-android-sdk-v4.1.4.3.13
Content-Type: multipart/form-data; boundary=86f663d8-ac4b-4f40-a831-24cb7b729be0
Content-Length: 8521
Host: bj.file.myqcloud.com
Accept-Encoding: gzip`
	exp := regexp.MustCompile(`^POST /files/.*?/.*?/zhenai.*?/data/app.*?/.*?/.*?/(.*?)/`)
	r:=exp.FindSubmatch([]byte(req))
	username := string(r[1])
	fmt.Println(username)
}

func happy() {
	cookie := `_ref=5b62954bf17d6; SERVERID=_srv80-122_; _vid=C8161C4E6F9000015A2C1743CB70FBA0; _user=90f16db11c9e7e42cac606fcabad2e31_181767852_1533187413; _preemail=237731947%40qq.com; _uid=181767852; _email=237731947%40qq.com; _laid=0; _kx=MTgxNzY3ODUyOjlnN2IyajEwM3Z5ODo1bjF0YWJ4bnB1ZGN6b2FodHlxMGpzYW94dmk3YjY4cG8ya2c%3D; _sso=181767852; noFocusContent=1; onlinenum=c%3A0; wpresence=XQryUFGfVr54-N534Asmsnaz8DvfgkVdW2KVYw.ZGZ0MTgxNzY3ODUy`
	exp := regexp.MustCompile(`_preemail=.*; *.*_uid=(.*?); *.*_email=.*;`)
	r := exp.FindAllSubmatch([]byte(cookie), 1)
	username := string(r[0][1])
	fmt.Println(username)

	html := `GET /mobile/agent.json?oauth_consumer_key=87247717949570179fa41c43e20ed289&oauth_signature_method=HMAC-SHA1&oauth_version=1.0&oauth_timestamp=1533182518&oauth_nonce=a3d101ff30a60d78812232281fd7f527&ctype=03403AndroidClient&rurl=%2Fkxapi%2Fhome%2Fnotice.php%3Fuid%3D181767852%26api_version%3D4.6.2%26version%3Dandroid-4.5.0&device_name=OnePlus%24%21ONEPLUS+A3010&oauth_token=181767852_7377fd328830267b0a71def9be3e2c&oauth_signature=Tk2Y9uvTEEsSgkCmFNfPboOFCm8%3D HTTP/1.1
Connection: Keep-Alive
Host: api.kaixin001.com
Cookie: SERVERID=_srv80-97_
Cookie2: $Version=1
`
	html, _ = url.QueryUnescape(html)
	fmt.Println(html)
	exp = regexp.MustCompile(`(?s)^GET /mobile/agent.json.*uid=(.*?)&`)
	r = exp.FindAllSubmatch([]byte(html), 1)
	username = string(r[0][1])
	fmt.Println(username)

	ios := `{"fuid":"181767852","n":0,"total":0,"onlinetotal":0,"vtotal":0,"stotal":0,"birthtotal":0,"focustotal":0,"ret":1,"visitors":[],"starfriends":[],"onlines":[],"birthlist":[],"focuslist":[],"friends":[],"uid":"181767852"}`
	exp = regexp.MustCompile(`"fuid".*"friends".*"uid".*?:.*?"(.*?)"`)
	r = exp.FindAllSubmatch([]byte(ios), 1)
	username = string(r[0][1])
	fmt.Println(username)
}

func renren() {
	app := `v=1.0&call_id=1533193116973&gz=compression&uniq_key=0831408fc18302e23b97b4ba2dda6902&method_feed=%5B%22v%3D1.0%26method%3Dprofile.getInfo%26call_id%3D1533193116972%26uniq_key%3D0831408fc18302e23b97b4ba2dda6902%26uid%3D967241204%26api_key%3D9e1874c67e0b42d79cc16f787b644339%26need_vip_info%3D1%26needLogo%3Dtrue%26type%3D283467841536%26format%3Djson%26flag%3D1%26sig%3Dfd6a90baa9a9ef85c12271ad43119a5c%22%2C%22v%3D1.0%26method%3Duser.getVisitors%26call_id%3D1533193116972%26uniq_key%3D0831408fc18302e23b97b4ba2dda6902%26page_size%3D1%26head_url_switch%3D2%26uid%3D967241204%26api_key%3D9e1874c67e0b42d79cc16f787b644339%26need_vip_info%3D1%26page%3D1%26type%3D3%26format%3Djson%26sig%3Da1f6004b824ac543085871636dea828c%22%5D&api_key=9e1874c67e0b42d79cc16f787b644339&session_key=g2x8ROF9C2CWszcx&format=json&sig=59cd72d3ba25ca7c6c70068a89190f15`
	exp := regexp.MustCompile(`uniq_key.*uid(%3D|=|%3d)(.*?)(&|%26).*format`)
	r := exp.FindAllSubmatch([]byte(app), 1)
	username := string(r[0][2])
	fmt.Println(username)

	cookie := `Cookie: anonymid=jkc6f8cs-ahsr84; depovince=ZJ; _r01_=1; JSESSIONID=abcqO1-LSeaJv-2Xeu5tw; ick_login=9118ef73-8fef-4c6d-99dc-c038231db63d; t=8f760840acc2ae4d6bc1149078f0237e4; societyguester=8f760840acc2ae4d6bc1149078f0237e4; id=967241204; xnsid=6af8ed4; ver=7.0; loginfrom=null; wp_fold=0; jebecookies=03ed0b8d-4192-448c-8f3d-5106e1981677|||||`
	exp = regexp.MustCompile(`anonymid=.*;.*depovince=.*;.*[^a-zA-Z_]id=(.*?);`)
	r = exp.FindAllSubmatch([]byte(cookie), 1)
	username = string(r[0][1])
	fmt.Println(username)

}

func tianya() {
	cookie := `user=w=yiqiladab&id=136982952&f=1;temp=k=724386995&s=&t=1533196879&b=60b6ba4e808d5ba530399a2606ce4f6d&ct=1533196879&et=-1;sso=r=359645226&sid=&wsid=73CA783237856E90722D231B28D0CFE9;`
	exp := regexp.MustCompile(`user=w=.*?&id=(.*?)&`)
	r := exp.FindAllSubmatch([]byte(cookie), 1)
	username := string(r[0][1])
	fmt.Println(username)
}

func qqmain() {
	http := `GET /cgi-bin/mobile_syn?ef=js&t=mobile_data.json&null&s=syn&folder=1&set=1&note=1&app=yes&ntup=0&verupdate=5.5.1&addrupt=1533259410&plpunread=1&isbackground=0&wereadsynckey=0_1528449475_0&sid=YwiGlBS6iaLBAA5V3_nThPMSa7ff8b,4,1TTNhU0ZueHRnMg..&error=app&f=xhtml&apv=5.5.1.10131054&os=android%3AOnePlus%3AONEPLUS+A3010%3A25&channelid=11&apv=5.5.1.10131054 HTTP/1.1
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Cookie: appkey=8ce648af;k=4740;curuin=237731947;autologin=;qm_flag=0;qqmail_alias=237731947@qq.com;msid=YwiGlBS6iaLBAA5V3_nThPMSa7ff8b,4,1TTNhU0ZueHRnMg..;sid=237731947&04056b44aa9fbe6ad90ea249ec3ba4c9,1TTNhU0ZueHRnMg..;qm_username=237731947;ssl_edition=sail.qq.com;edition=sail.qq.com;username=237731947&237731947;
User-Agent: Dalvik/2.1.0 (Linux; U; Android 7.1.1; ONEPLUS A3010 Build/NMF26F)
Host: i.mail.qq.com
Connection: Keep-Alive`
	exp := regexp.MustCompile(`(?s)^((GET)|(POST)) /cgi-bin.*Cookie.*qqmail_alias=(.*?);`)
	r := exp.FindAllSubmatch([]byte(http), 1)
	username := string(r[0][4])
	fmt.Println(username)
}

func txwb() {
	ios := `POST /cbdata/config/update HTTP/1.1
Referer: http://r.t.qq.com
Connection: Keep-Alive
User-Agent: AMB_612/061348&NA/061348&android7.1.1&6712014&ONEPLUSA3010&NA&NA&V3
Cookie: p_uin=o237731947;p_skey=cmYlRJYUvPzdBv5jnPtRwmBn5ehgcZVC*hu5B4WMuic_
Content-Length: 232
Content-Type: text/plain; charset=UTF-8
Host: r.t.qq.com`
	exp := regexp.MustCompile(`(?s)^POST /cbdata.*Cookie.*p_uin=[0Oo]*(.*?)[^0-9]`)
	r := exp.FindAllSubmatch([]byte(ios), 1)
	username := string(r[0][1])
	fmt.Println(username)

	cookie := `GET /wangbin123 HTTP/1.1
Host: t.qq.com
Connection: keep-alive
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
DNT: 1
Referer: http://t.qq.com/iamcjsyr
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cookie: pgv_pvi=6070565888; RK=AapRF14Fe0; ptcz=65a028ed5683d61113530d941164c340a245f40ddf4a0879830f65a3969c342d; 
pgv_pvid=5257047487; eas_sid=rs4HgvHexJVtTmNSjbOCehvd6R; tvfe_boss_uuid=a15ee8876f4f0a75; o_cookie=237731947; 
pac_uid=1_237731947; ts_uid=2158981939; gaduid=5b449fd6894f7; pt2gguin=o0237731947; wb_regf=%3B0%3B%3Bwww.baidu.com%3B0; 
mb_reg_from=8; wbilang_10000=zh_CN; pgv_si=s935817216; _qpsvr_localtk=0.27491294749102635; pgv_info=ssid=s2813356826; 
ts_refer=www.baidu.com/s; ptisp=ctc; ptui_loginuin=237731947; uin=o0237731947; skey=@OWBJ408aL; luin=o0237731947; 
lskey=00010000631be76da9ff8f6ff79fc5f94d34a9a520c59ff5307a8b9dc165838e90e9d2808331d7b7625bac88; p_uin=o0237731947; 
pt4_token=eQeWh0Q7KMB9TFFBieEcFpnXPaX0NjKX43nPP*5v1as_; p_skey=lREhhtNlv0IqSURAB8H6moqxo9lCmmsYJtuz695WcSE_; 
p_luin=o0237731947; p_lskey=00040000f1b02d331e76ac870263ed852c6c805b65faefd73c355f68fb7f33ec738a12aecc6850db94da5063; 
wbilang_237731947=zh_CN; ts_last=t.qq.com/wangbin123`
	exp = regexp.MustCompile(`(?s)^GET /.*Host: t.qq.com.*Cookie.*((o_cookie)|(p_uin)|(pt2gguin)|
								(ptui_loginuin)|(ptui_loginuin)|(uin)|(luin)|(p_luin))=[0Oo]*(.*?)[^0-9]`)
	//for i,u:=range exp.FindSubmatch([]byte(cookie))[1:]{
	//	fmt.Println(i+1,string(u))
	//}
	rs := exp.FindSubmatch([]byte(cookie))
	username = string(rs[len(rs)-1])
	fmt.Println(username)
}

func wangyi() {
	payload:=[]byte{0xd1,0x70,0x0,0x0,0x0,0x0,0x1,0x0,0x1,0x0,0xc8,0xb,0x9c,0x2,0x0,0x9,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7b,0x22,0x75,0x73,0x65,0x72,0x22,0x3a,0x20,0x22,0x31,0x35,0x38,0x38,0x38,0x33,0x39,0x37,0x30,0x31,0x32,0x40,0x31,0x36,0x33,0x2e,0x63,0x6f,0x6d,0x22,0x2c,0x20,0x22,0x6c,0x74,0x79,0x70,0x65,0x22,0x3a,0x20,0x31,0x2c,0x20,0x22,0x63,0x69,0x70,0x22,0x3a,0x20,0x22,0x31,0x32,0x35,0x2e,0x31,0x32,0x33,0x2e,0x32,0x30,0x2e,0x33,0x37,0x22,0x2c,0x20,0x22,0x73,0x72,0x76,0x73,0x22,0x3a,0x20,0x7b,0x22,0x31,0x35,0x32,0x22,0x3a,0x20,0x5b,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x31,0x37,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x31,0x38,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x31,0x39,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x32,0x30,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x32,0x39,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x33,0x2e,0x32,0x33,0x32,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x35,0x2e,0x31,0x36,0x30,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x35,0x2e,0x31,0x36,0x31,0x3a,0x34,0x34,0x33,0x22,0x2c,0x20,0x22,0x32,0x32,0x30,0x2e,0x31,0x38,0x31,0x2e,0x31,0x35,0x2e,0x31,0x36,0x32,0x3a,0x34,0x34,0x33,0x22,0x5d,0x7d,0x7d}
	jsexp:=regexp.MustCompile(`"user" *?: *?"(.*?)"`)
	if bytes.Equal(payload[:4],[]byte{209,112,0,0})&&
		(payload[4]==0||payload[4]==2)&&
		bytes.Equal(payload[5:8],[]byte{0,1,0})&&
		bytes.Equal(payload[9:12],[]byte{0,200,11}) {
		rs:=jsexp.FindSubmatch(payload[12:])
		if len(rs)>0{
			u:=rs[1]
			fmt.Printf("%q # wangyi mail\n",u)
		}
	}
}

func meituan(){
	headers:=`GET / HTTP/1.1
Host: www.meituan.com
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
DNT: 1
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9
Cookie: _lx_utm=utm_source%3Dbaidu%26utm_medium%3Dorganic%26utm_term%3D%25E7%25BE%258E%25E5%259B%25A2; _lxsdk_cuid=16511e290bac8-053615c4750685-3b60490d-1fa400-16511e290bbc8; mtcdn=K; u=278050079; n=iamcjsyr; lt=JfWV2UTpLBP4HogbyOhVWGtLsKwFAAAAPAYAADnhWdWsrXsGN_35UjzNM76QDYtba3jflWh2xm8CZaoo_fIL9XiPfN3r6ozxSGG7PQ; lsu=; oc=lxKkO07Q8-yJKJYoC1QP6RATI3Y5S3SgmL5Ve0oji6ew0JrVmk5WbNFlH2MBAFE27q6uPKwgSvB5iDEyKL0tQDem4zxIfpR-f4YrLq-j7pW3Id5HCzs9INqIyTIs1MlTdXOPwZMWecD0AFm7gyJyByltMfNLFxHmY_hTKrLqXhk; ci=185; token2=JfWV2UTpLBP4HogbyOhVWGtLsKwFAAAAPAYAADnhWdWsrXsGN_35UjzNM76QDYtba3jflWh2xm8CZaoo_fIL9XiPfN3r6ozxSGG7PQ; uuid=3a567e3f52564612a245.1533603389.2.0.1; em=bnVsbA; om=bnVsbA; unc=iamcjsyr; __mta=215407272.1533603385632.1533603417978.1533603428106.4; _lxsdk_s=16511e290bc-48a-203-92c%7C%7C8`
	exp := regexp.MustCompile(`(?s)^GET /.*Host: .*meituan.*Cookie:.* u=(.*?)[^0-9]`)
	rs := exp.FindSubmatch([]byte(headers))
	username := string(rs[1])
	fmt.Println(username)
}

func zfb(){
	headers:=`POST /squery HTTP/1.1
HOST: amdc.alipay.com
Accept: */*
Content-Type: text/plain
Connection: close
User-Agent: Alipay/10.1.30.300 iOS/11.4
Content-Length: 176
Accept-Encoding: gzip
x-amdc-ts: 1533881620930
x-amdc-appid: IPHONE_1ND
x-amdc-sign: d1371bff2b981d76d5ea8b6ffa08fd84252d77f0

{"osType":"IPHONE","clientVersion":"10.1.30.300","uid":"2088022759023787","netType":"4","dg":"i7","ver":"2","utdid":"WyooHzzVXLoDAFflE0yhbMDP","lat_lng":"30.725809;120.720289"}`
	exp := regexp.MustCompile(`(?s)(?i)^POST /squery.*Host: .*alipay.*"uid":"(.*?)"`)
	rs := exp.FindSubmatch([]byte(headers))
	username := string(rs[1])
	fmt.Println(username)
}

func getservernames(data []byte)(names [][]byte,err error){
	//从panic中恢复
	defer func() {
		if err := recover(); err != nil {
			fmt.Println("Panic!",err)
			debug.PrintStack()
		}
	}()

	pos:=0
	pos+=5//指向Handshake层
	pos+=1+3+2+32//指向session id长度
	//slen:=binary.BigEndian.Uint16(data[pos:])
	slen:=int(data[pos])//session id长度
	pos+=1+slen//指向加密套件长度
	slen=int(binary.BigEndian.Uint16(data[pos:]))//加密套件长度
	pos+=2+slen//指向压缩方法长度
	slen=int(data[pos])//压缩方法长度
	pos+=1+slen//指向拓展长度
	slen=int(binary.BigEndian.Uint16(data[pos:]))//拓展长度
	pos+=2

	//接下来遍历每个拓展找到servername
	for pos<len(data){
		//拓展类型
		tp:=binary.BigEndian.Uint16(data[pos:])
		pos+=2
		//到达拓展最后的填充
		if tp==uint16(0x15){
			break
		}
		slen=int(binary.BigEndian.Uint16(data[pos:]))//这个拓展的长度
		pos+=2
		//servername
		if tp==uint16(0x00){
			names=make([][]byte,1)
			p:=pos
			//snllen:=binary.BigEndian.Uint16(data[p:])//Server Name list length,为了方便我目前只取第一个
			p+=2
			t:=data[p]//server name type
			p++
			if t==0{//host name
				snlen:=int(binary.BigEndian.Uint16(data[p:]))//server name长度
				p+=2
				name:=data[p:p+snlen]
				names[0]=make([]byte,snlen)
				copy(names[0],name)
				//fmt.Println(string(name))
			}
			break
		}
		pos+=slen
	}
	return
}

func httpstest(){
	data:=[]byte{0x16, 0x03, 0x01, 0x02, 0x00, 0x01, 0x00, 0x01,
		0xfc, 0x03, 0x03, 0x85, 0xda, 0xda, 0xa1, 0xe0,
		0xcc, 0x9a, 0x24, 0x9d, 0x00, 0x6a, 0xfd, 0xf5,
		0xea, 0xdc, 0x90, 0xea, 0xbf, 0x8b, 0x26, 0x91,
		0xd6, 0xf4, 0xdc, 0xe2, 0xfa, 0x58, 0x3f, 0x15,
		0x43, 0x1f, 0xea, 0x20, 0xdb, 0xb1, 0xc7, 0x1a,
		0x20, 0x26, 0x68, 0x59, 0xec, 0xd9, 0x6e, 0x44,
		0xb7, 0xbe, 0x13, 0xed, 0xad, 0xeb, 0x09, 0x7f,
		0x93, 0xf2, 0x05, 0x95, 0xff, 0x37, 0xad, 0xd6,
		0xe1, 0x49, 0x30, 0x19, 0x00, 0x1c, 0x8a, 0x8a,
		0xc0, 0x2b, 0xc0, 0x2f, 0xc0, 0x2c, 0xc0, 0x30,
		0xcc, 0xa9, 0xcc, 0xa8, 0xc0, 0x13, 0xc0, 0x14,
		0x00, 0x9c, 0x00, 0x9d, 0x00, 0x2f, 0x00, 0x35,
		0x00, 0x0a, 0x01, 0x00, 0x01, 0x97, 0xda, 0xda,
		0x00, 0x00, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00,
		0x00, 0x00, 0x15, 0x00, 0x13, 0x00, 0x00, 0x10,
		0x7a, 0x68, 0x69, 0x64, 0x61, 0x6f, 0x2e, 0x62,
		0x61, 0x69, 0x64, 0x75, 0x2e, 0x63, 0x6f, 0x6d,
		0x00, 0x17, 0x00, 0x00, 0x00, 0x23, 0x00, 0x68,
		0xa6, 0x46, 0x71, 0x38, 0xb7, 0x55, 0x57, 0x6e,
		0x84, 0x62, 0x8d, 0x8c, 0x5a, 0x9d, 0x1a, 0x25,
		0x2c, 0x50, 0x8d, 0x6b, 0x61, 0xb7, 0x07, 0x68,
		0xc2, 0x16, 0x06, 0x76, 0x4b, 0xa7, 0xdd, 0xa9,
		0xc1, 0x2b, 0x4a, 0x05, 0x71, 0x4f, 0x94, 0xa2,
		0xed, 0x6c, 0x1a, 0xe2, 0x2d, 0x4a, 0x87, 0xfa,
		0xc5, 0xd7, 0x1b, 0x9a, 0x54, 0x05, 0x98, 0x3d,
		0xe5, 0xc1, 0x06, 0x4a, 0x6d, 0x3d, 0x31, 0x0b,
		0x4f, 0x27, 0x4e, 0xdd, 0xc3, 0x37, 0xcf, 0xc3,
		0xa4, 0x92, 0xb0, 0x58, 0xf9, 0x6c, 0xf9, 0xb7,
		0x27, 0xd0, 0x39, 0x10, 0xf8, 0x32, 0x51, 0xd5,
		0xd0, 0x9b, 0x0d, 0xda, 0xe1, 0x42, 0x59, 0xb5,
		0xbb, 0x78, 0x54, 0xe1, 0x79, 0xe0, 0x43, 0xc5,
		0x00, 0x0d, 0x00, 0x14, 0x00, 0x12, 0x04, 0x03,
		0x08, 0x04, 0x04, 0x01, 0x05, 0x03, 0x08, 0x05,
		0x05, 0x01, 0x08, 0x06, 0x06, 0x01, 0x02, 0x01,
		0x00, 0x05, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x10, 0x00,
		0x0e, 0x00, 0x0c, 0x02, 0x68, 0x32, 0x08, 0x68,
		0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31, 0x75,
		0x50, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x02, 0x01,
		0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x08, 0xda,
		0xda, 0x00, 0x1d, 0x00, 0x17, 0x00, 0x18, 0xaa,
		0xaa, 0x00, 0x01, 0x00, 0x00, 0x15, 0x00, 0xad,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00}
	names,err:=getservernames(data)
	if err == nil {
		fmt.Println(string(names[0]))
	}
}

func maopu(){
	headers:=`GET /space/453956642 HTTP/1.1
Host: hi.mop.com
Connection: keep-alive
Upgrade-Insecure-Requests: 1
DNT: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://www.mop.com/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cookie: _ms=1534834690092423325; _mc=m-1534834690092368617; _ml=200427500453956642651; _mu=453956642%7Cboynextdor%7C; mop_uid=453956642; Hm_lvt_478a545b1304d1c78ecf8fa7a9ef656f=1534834667,1534834963,1534834971; Hm_lpvt_478a545b1304d1c78ecf8fa7a9ef656f=1534834971; logined=1; bindphone=1; read_mop=ascr,asc`
	//exp:=regexp.MustCompile(`(?s)(?i)Host: .*mop.*Cookie: .*mop_uid=(.*?);`)
	exp:=regexp.MustCompile(`(?s)(?i)Host: .*mop.*Cookie: .*_mu=(\d+)%7c`)
	rs := exp.FindSubmatch([]byte(headers))
	username := string(rs[1])
	fmt.Println(username)
	app:=`app_id=mop&imei=862561038134977&ime=862561038134977&softtype=MaoPu&softname=MOPAndroid&appqid=mp_txyyb180821&apptypeid=MOP&ver=5.1.3&os=Android7.1.1&appver=050103&deviceid=20d3f205-e86c-3b23-b494-764fe963857e&position=%E4%B8%AD%E5%9B%BD&device=ONEPLUS%20A3010&network=4G&iswifi=4g&platform=app&mtoken=909B8DAEE5056F2CEBFC09562BD8EFC3&pageid=null&level1=zhanghu&intervaltime=1&level2=null&accid=453956642&sign=e80c428291bf36fd14cef09216d07d04`
	exp=regexp.MustCompile(`app_id=mop.*softtype=MaoPu.*accid=(.*?)&`)
	rs = exp.FindSubmatch([]byte(app))
	username = string(rs[1])
	fmt.Println(username)
}

func aestest(){
	const AESKEY = "PheiCloudNetSecurityWAServerAESK"
	const IVKEY = "PheiCloudWAIVKEY"
	var block cipher.Block
	var err error
	block, err = aes.NewCipher([]byte(AESKEY))
	if err != nil {
		log.Fatal(err)
	}
	data:=[]byte("123")
	cipher.NewCFBEncrypter(block, []byte(IVKEY)).XORKeyStream(data, data)
	fmt.Println(data)
}

func main() {
	maopu()
	//aestest()
	//httpstest()
	//zfb()
	//meituan()
	//wangyi()
	//txwb()
	//qqmain()
	//tianya()
	//renren()
	//happy()
	//zhenai()
	//rujia()
	//huazhu()
	//yihaodian()
	//yilong()
	//qqgame()
	//weipinhui()
	//tool()
	//tieba()
	//jingdong()
}

func dellm(bs []byte) (zc string) {
	ss := string(bs)
	rs := []rune(ss)
	buf := make([]rune, 0, len(rs))
	c := 0
	for _, r := range rs {
		if unicode.Is(unicode.Scripts["Han"], r) ||
			r >= 'A' && r <= 'Z' || r >= 'a' && r <= 'z' || r >= '0' && r <= '9' || r == '_' {
			s := string(r)
			_ = s
			buf = append(buf, r)
			c++
			continue
		}
		break
	}
	zc = string(buf[:c])
	return
}

func unicodetoutf8(ustr string) (str string) {
	sUnicodev := strings.Split(ustr, `\u`)
	for _, v := range sUnicodev {
		if len(v) < 1 {
			continue
		}
		temp, err := strconv.ParseInt(v, 16, 32)
		if err != nil {
			panic(err)
		}
		str += fmt.Sprintf("%c", temp)
	}
	return
}
